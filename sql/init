CREATE TABLE users (
    user_id  INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('admin', 'user', 'guest') DEFAULT 'user',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE pets (
    pet_id  INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, 
    pet_category VARCHAR(50),
    pet_breed VARCHAR(50),
    pet_age INT, 
    immun_history VARCHAR(50),
    medical_condition VARCHAR(50),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
CREATE TABLE appointments (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY, 
    user_id INT NOT NULL, 
    pet_id INT NOT NULL, 
    doctor_id INT NOT NULL, 
    appointment_date DATETIME NOT NULL, 
    reason VARCHAR(150),
    statu VARCHAR(50),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (pets_id) REFERENCES pets(pets_id),
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id)
);
CREATE TABLE doctors (
    doctor_id INT AUTO_INCREMENT PRIMARY KEY, 
    first_name VARCHAR(50), not null, 
    last_name VARCHAR(50), 
    specialty VARCHAR(100) NOT NULL, 
    email VARCHAR(50) NOT NULL, 
    phone VARCHAR(20) 
);
CREATE TABLE grooming(
    groom_id INT AUTO_INCREMENT PRIMARY KEY, 
    pet_id INT NOT NULL, 
    user_id INT NOT NULL, 
    groom_date DATETIME NOT NULL, 
    groom_type VARCHAR(20),
    status VARCHAR(20), 
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    FOREIGN KEY (pet_id) REFERENCES pets(pet_id)
);
CREATE TABLE adotpion(
    adopt_id INT AUTO_INCREMENT PRIMARY KEY, 
    pet_id INT NOT NULL, 
    adopter_id INT NOT NULL, 
    adoption_date DATETIME NOT NULL, 
    status VARCHAR(20),
    FOREIGN KEY (pet_id) REFERENCES pets(pet_id),
    FOREIGN KEY (adopter_id) REFERENCES users(user_id)
);
CREATE TABLE store (
    item_id INT AUTO_INCREMENT PRIMARY KEY, 
    item_name VARCHAR(50),
    desc VARCHAR(200),
    price DECIMAL(10,2),
    stock INT, 
);
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY, 
    user_id INT NOT NULL, 
    item_id INT NOT NULL,  
    quant INT DEFAULT 1, 
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (item_id) REFERENCES store_items(item_id)
);
CREATE TABLE immunizations (
    immun_id INT AUTO_INCREMENT PRIMARY KEY, 
    pet_id INT NOT NULL, 
    vaccine_name VARCHAR(50),
    vaccine_date DATE,
    due_date DATE, 
    comments VARCHAR(200), 
    FOREIGN KEY (pet_id) REFERENCES pets(pet_id)
);
CREATE TABLE membership(
    payment_id INT AUTO_INCREMENT PRIMARY KEY, 
    user_id INT NOT NULL, 
    plan_details VARCHAR(50),
    start_date DATE, 
    end_date DATE, 
    status VARCHAR(20),
    FOREIGN KEY (user_id) REFERNCES (user_id)
);
CREATE TABLE payments(
    payment_id INT AUTO_INCREMENT PRIMARY KEY, 
    user_id INT NOT NULL, 
    order_id INT,
    amount DECIMAL(10,2), 
    payment_date DATETIME, 
    payment_method VARCHAR(50),
    status VARCHAR(200),
    FOREIGN KEY(user_id) REFERENCES users(user_id),
    FOREIGN KEY(order_id) REFERNCES orders(order_id)
);
